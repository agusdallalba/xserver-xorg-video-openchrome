2005-06-01  Thomas Hellström  <unichrome-at-shipmail-dot-org>

	* unichrome/via_mode.c: (ViaModePrimary):
	* unichrome/via_vt162x.h:

	- Fix TV-out on Unichrome Pro. To make it work CRT+TV needs to be
	  enabled in BIOS. Still it will hang the machine or possibly only
	  the display chip on X server exit.
	- Import the 720x576Noscale mode for vt1622A/vt1623 from the Unichrome
	  driver (Terry Barnaby)

2005-05-25  Thomas Hellström  <unichrome-at-shipmail-dot-org>

	* libxvmc/viaLowLevelPro.c: (setHQVDeinterlacing):
	* libxvmc/viaXvMC.c:
	* unichrome/via_driver.c:
	* unichrome/via_mode.c: (ViaModePrimary):
	* unichrome/via_mode.h:
	* unichrome/via_vt162x.c: (ViaVT162xDetect):

	- Updated incorrect field order in libViaXvMCPro.
	- Fixed warnings about unresolved int10 symbols in the Unichrome driver.
	- Updated Unichrome Pro dotclocks - also for TV.
	- Made the driver recognize the vt1623 TV encoder on the EPIA SP13000.
	- Removed unnecessary define in viaXvMC.c.
	
2005-05-16  Thomas Hellström  <unichrome-at-shipmail-dot-org>

	* libxvmc/driDrawable.c: (getDRIDrawableInfoLocked):
	* libxvmc/viaXvMC.c: (releaseContextResources),
	(XvMCCreateContext):
	* libxvmc/xf86dri.c: (uniDRIDestroyContext),
	(uniDRICreateDrawable), (uniDRIDestroyDrawable),
	(uniDRIGetDrawableInfo):
	* libxvmc/xf86dri.h:

	- Changed DRI client function names since they clash with
	  via_dri.so, causing strange problems in, for example, xine.
	
2005-05-16  Thomas Hellström  <unichrome-at-shipmail-dot-org>

	* unichrome/via_dri.c: (VIASetAgpMode), (VIADRIAgpInit):

	- Added better AGP mode control to the DDX.

2005-05-11  Thomas Hellström  <unichrome-at-shipmail-dot-org>

	* prepare-ChangeLogSVN.pl:

	- Added the above file for generation of ChangeLog Entries.

	
2005-05-11  Thomas Hellström  <unichrome-at-shipmail-dot-org>
	
	* libxvmc/driDrawable.c:
	* libxvmc/viaLowLevel.c: (hwlLock), (hwlUnlock),
	(setAGPSyncLowLevel), (viaDMATimeStampLowLevel),
	(flushXvMCLowLevel), (flushPCIXvMCLowLevel),
	(viaMpegSetSurfaceStride), (viaVideoSetSWFLipLocked),
	(viaVideoSWFlipLocked), (viaMpegSetFB), (viaMpegBeginPicture),
	(viaMpegReset), (viaMpegWriteSlice), (viaVideoSubPictureOffLocked),
	(viaVideoSubPictureLocked), (viaBlit), (syncXvMCLowLevel),
	(initXvMCLowLevel), (setLowLevelLocking), (closeXvMCLowLevel):
	* libxvmc/viaLowLevel.h:
	* libxvmc/viaLowLevelPro.c: (initHQVShadow),
	(setHQVHWDeinterlacing), (setHQVDeblocking), (setHQVStartAddress),
	(setHQVColorSpaceConversion), (setHQVFetchLine), (setHQVScale),
	(setHQVSingleDestination), (setHQVDeinterlacing),
	(setHQVTripleBuffer), (hwlLock), (hwlUnlock), (setAGPSyncLowLevel),
	(viaDMATimeStampLowLevel), (viaDMAInitTimeStamp),
	(uploadHQVDeinterlace), (uploadHQVShadow), (flushXvMCLowLevel),
	(flushPCIXvMCLowLevel), (viaMpegSetSurfaceStride),
	(viaVideoSetSWFLipLocked), (viaVideoSWFlipLocked), (viaMpegSetFB),
	(viaMpegBeginPicture), (viaMpegReset), (viaMpegWriteSlice),
	(viaVideoSubPictureOffLocked), (viaVideoSubPictureLocked),
	(viaBlit), (syncXvMCLowLevel), (updateLowLevelBuf),
	(cleanupLowLevelBuf), (initXvMCLowLevel), (setLowLevelLocking),
	(closeXvMCLowLevel), (computeDownScaling),
	(computeHQVScaleAndFilter), (setupBackBuffer):
	* libxvmc/viaXvMC.c: (grabDecoder), (releaseContextResources),
	(XvMCCreateContext), (XvMCCreateSurface), (XvMCPutSlice2),
	(XvMCPutSlice), (XvMCPutSurface), (XvMCBeginSurface),
	(XvMCSyncSurface), (XvMCLoadQMatrix), (XvMCCreateSubpicture),
	(XvMCSetSubpicturePalette), (XvMCClearSubpicture),
	(XvMCCompositeSubpicture), (XvMCBlendSubpicture2),
	(XvMCSyncSubpicture), (XvMCDestroySubpicture), (XvMCFlushSurface),
	(XvMCGetSurfaceStatus), (XvMCQueryAttributes), (XvMCSetAttribute),
	(XvMCGetAttribute), (XvMCHideSurface):
	* libxvmc/viaXvMCPriv.h:
	* unichrome/via_swov.c: (ViaSwovSurfaceCreate):
	* unichrome/via_video.c: (viaSetupAdaptors):
	* unichrome/via_xvpriv.h:

	- Added ChangeLog to the repository.
	- Made the DDX update the overlay if a change in surface format occured
	  while it's dimensions are still the same.
	- Made the XvMCLowLevel struct opaque (void *) and not defined in the 
	  header file. This allows for different definitions for different hardware
	- Added a HQV shadow which holds the HQV context for the Unichrome Pro. 
	  The purpose is twofold:
	  1. If someone else touched the HQV since we last used it, we can upload the
	     whole context.
	  2. We do not need to read from the HQV, which is bad because we have to 
	     halt the DMA engine to do that.
	- Added and activated mpeg deblocking for Unichrome Pro.
	- Added a number of HQV utility functions for the upcoming video engine free
	  output. These are not activated yet. (Unichrome Pro.)
	- Added HW deinterlacing functions. Deactivated, since I cannot see any visible
	  difference. (Unichrome Pro.)
