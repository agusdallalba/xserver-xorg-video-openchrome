-----------------------------------------
Guide to preparing your working directory
-----------------------------------------

Debian X Strike Force team maintains packages in git repositories,
openchrome upstream maintains the code in subversion. This will show how to
setup git-svn to work on xserver-xorg-video-openchrome and fetch new 
revisions from upstream.

1. Clone the debian package repository:
   (if you have access to it you can clone with ssh too.)

git clone git://git.debian.org/pkg-xorg/driver/xserver-xorg-video-openchrome.git

2. Enter the newly created directory before continuing.

cd xserver-xorg-video-openchrome

3. Setup the subversion tracking for openchrome trunk
   (if you need the branches and tags, then replace "-T trunk" by "--stdlayout")

git svn init http://svn.openchrome.org/svn/ -T trunk

4. *Optional step* speed-up the svn fetch by updating manually the trunk's 
   remote reference.
   - Find latest svn commit in history (I did it graphically)

gitk --all &

   - Change the trunk's remote reference:

git update-ref refs/remotes/trunk <git-commit-id>

5. Fetch subversion history

git svn fetch

   Note: for some reason git-svn will create a master branch if none existed,
   it can be ignored, only the refs/remotes/trunk is important.

6. Setup and other remote branch for xsfbs

git remote add xsfbs git://git.debian.org/pkg-xorg/xsfbs.git

7. And fetch it

git fetch xsfbs

--------------------
Building the package
--------------------

With the workdir prepared as explained above, all you need to build the package
is to run git-buildpackage. The configuration file in debian/gbp.conf already
takes cake of setting the needed options.

Warning: the debian/gbp.conf file is different in debian-unstable and 
debian-experimental, as it contains the name of those branches and the
corresponding upstream-* branch. So one must take care of this when merging
changes between those two branches.

----------------------
Updating from upstream
----------------------

New upstream revisions are fetched with git-svn [1] then the changes are 
merged to one of the upstream-* branches with git [2]. Then the regular
git usage to merge to the debian-* branches can be used. However the package
is configured to use pristine-tar by default, so in order to compile your
newly fetched version with git-buildpackage you will have to disable it [3].

1: git svn fetch
2: git merge trunk
3: git-buildpackage --git-no-pristine-tar

Once the package is ready, before uploading to the archive, the pristine-tar
branch should be updated, simply use the 'pristine-tar commit' command to add
the tarball git-buildpackage generated to the git repository.
For example if you're updating a version targeting  unstable, the command would
be as follows [4]:

4: pristine-tar commit ../xserver-xorg-video-openchrome_*.orig.tar.gz upstream-unstable

This step is required so that next debian version of the same upstream version
can be generated by other developers without the need to retrieve the original
tarball from the archive or from snapshot.debian.org but simply by using the
git repository.
Note: When the revision matches an upstream release, it would be appreciated to
use the official release tarball instead, if possible.

